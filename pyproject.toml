[build-system]
build-backend = "setuptools.build_meta"

requires = [
  "cython>=0.29",
  "numpy>=2.0.0rc1; python_version>='3.9'",
  "oldest-supported-numpy; python_version<'3.9'",
  "setuptools>=61",
  "setuptools-scm[toml]>=3.4",
]

[project]
name = "netcdf4"
description = "Provides an object-oriented python interface to the netCDF version 4 library"
readme.content-type = "text/x-rst"
readme.text = """\
netCDF version 4 has many features not found in earlier versions of the library,
such as hierarchical groups, zlib compression, multiple unlimited dimensions,
and new data types.  It is implemented on top of HDF5.  This module implements
most of the new features, and can read and write netCDF files compatible with
older versions of the library.  The API is modelled after Scientific.IO.NetCDF,
and should be familiar to users of that module.
"""
keywords = [
  "climate",
  "data",
  "meteorology",
  "netcdf",
  "network",
  "numpy",
  "oceanography",
  "science",
]
license = { text = "MIT" }
authors = [
  { name = "Jeff Whitaker", email = "jeffrey.s.whitaker@noaa.gov" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Archiving :: Compression",
]
dynamic = [ "version" ]

dependencies = [
  "certifi",
  "cftime",
  "numpy",
]
optional-dependencies.tests = [
  "cython",
  "packaging",
  "pytest",
]
urls.Documentation = "https://unidata.github.io/netcdf4-python/"
urls.Repository = "https://github.com/Unidata/netcdf4-python"
scripts.nc3tonc4 = "netCDF4.utils:nc3tonc4"
scripts.nc4tonc3 = "netCDF4.utils:nc4tonc3"
scripts.ncinfo = "netCDF4.utils:ncinfo"

[tool.setuptools.packages.find]
where = [ "src" ]

[tool.setuptools.package-data]
"netCDF4.plugins" = [ "lib__nc*" ]

[tool.setuptools_scm]

[tool.pytest.ini_options]
pythonpath = [ "test" ]
filterwarnings = [
  "error",
  "ignore::UserWarning",
]

[tool.mypy]
files = [ "src/netCDF4" ]
exclude = "utils.py"
check_untyped_defs = true
allow_redefinition = true
# next 2 lines workarounds for mypy dealing with type_guards.py
mypy_path = "test"
explicit_package_bases = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "cftime.*",
  "cython.*",
  "filter_availability",
  "matplotlib.*",
]
